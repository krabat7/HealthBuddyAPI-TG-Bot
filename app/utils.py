import app.storage
import matplotlib.pyplot as plt

def calculate_goals(weight, height, age, activity, temperature):
    water = weight * 30 + (500 if activity > 30 else 0) + (500 if temperature > 25 else 0)
    calories = 10 * weight + 6.25 * height - 5 * age + activity * 5
    return {"water_goal": water, "calorie_goal": calories}

def get_user_data(user_id):
    user = app.storage.users.get(str(user_id))
    if not user:
        raise ValueError("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /set_profile.")
    return user

def generate_progress_graph(user_data, file_path="progress.png"):
    try:
        water_goal = user_data["water_goal"] + user_data.get("extra_water", 0)
        logged_water = user_data.get("logged_water", 0)

        calorie_goal = user_data["calorie_goal"] + user_data.get("extra_calories", 0)
        burned_calories = user_data.get("burned_calories", 0)
        updated_calorie_goal = calorie_goal + burned_calories
        logged_calories = user_data.get("logged_calories", 0)

        water_progress_percent = min((logged_water / water_goal) * 100, 100)
        calorie_progress_percent = min((logged_calories / updated_calorie_goal) * 100, 100)

        plt.style.use("ggplot")
        fig, axes = plt.subplots(1, 2, figsize=(14, 6))

        axes[0].bar(
            ["–ü—Ä–æ–≥—Ä–µ—Å—Å", "–¶–µ–ª—å"],
            [logged_water, water_goal],
            color=["dodgerblue", "limegreen"],
            edgecolor="black",
        )
        axes[0].set_title("–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≤–æ–¥–µ", fontsize=14, fontweight="bold")
        axes[0].set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–º–ª)", fontsize=12)
        axes[0].set_ylim(0, max(water_goal, logged_water) * 1.2)
        axes[0].grid(axis="y", linestyle="--", alpha=0.7)
        axes[0].text(
            0,
            logged_water + max(water_goal, logged_water) * 0.05,
            f"{water_progress_percent:.1f}%",
            ha="center",
            fontsize=12,
            color="black",
            fontweight="bold",
        )

        axes[1].bar(
            ["–ü—Ä–æ–≥—Ä–µ—Å—Å", "–¶–µ–ª—å"],
            [logged_calories, updated_calorie_goal],
            color=["orange", "limegreen"],
            edgecolor="black",
        )
        axes[1].set_title("–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º", fontsize=14, fontweight="bold")
        axes[1].set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–∫–∫–∞–ª)", fontsize=12)
        axes[1].set_ylim(0, max(updated_calorie_goal, logged_calories) * 1.2)
        axes[1].grid(axis="y", linestyle="--", alpha=0.7)
        axes[1].text(
            0,
            logged_calories + max(updated_calorie_goal, logged_calories) * 0.05,
            f"{calorie_progress_percent:.1f}%",
            ha="center",
            fontsize=12,
            color="black",
            fontweight="bold",
        )

        for ax in axes:
            ax.set_xticks([0, 1])
            ax.set_xticklabels(["–ü—Ä–æ–≥—Ä–µ—Å—Å", "–¶–µ–ª—å"], fontsize=12)

        plt.tight_layout()
        plt.savefig(file_path, dpi=300)
        plt.close()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞: {e}")
        raise

def get_commands_info():
    return (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–æ–¥—É –∏ –∫–∞–ª–æ—Ä–∏–∏.\n\n"
        "üîß <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/log_water &lt;–∫–æ–ª-–≤–æ –º–ª&gt; - –ó–∞–ø–∏—Å–∞—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã (–≤ –º–ª)\n"
        "/log_food &lt;–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞&gt; - –ó–∞–ø–∏—Å–∞—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∏—â–∏\n"
        "/log_workout - –ó–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n"
        "/check_progress - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "/delete_data - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤—Ä—É—á–Ω—É—é."
    )


async def get_profile_info(user_id):
    user = app.storage.users.get(str(user_id))
    if not user:
        return None

    # –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ
    profile_info = (
        f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n"
        f"–í–µ—Å: {user['weight']} –∫–≥\n"
        f"–†–æ—Å—Ç: {user['height']} —Å–º\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {user['age']} –ª–µ—Ç\n"
        f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user['activity']} –º–∏–Ω—É—Ç/–¥–µ–Ω—å\n"
        f"–ì–æ—Ä–æ–¥: {user['city']}\n"
        f"–¶–µ–ª—å –ø–æ –≤–æ–¥–µ: {user['water_goal']} –º–ª\n"
        f"–¶–µ–ª—å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º: {user['calorie_goal']} –∫–∫–∞–ª\n"
        f"–í—ã–ø–∏—Ç–æ –≤–æ–¥—ã: {user['logged_water']} –º–ª\n"
        f"–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–æ –∫–∞–ª–æ—Ä–∏–π: {user['logged_calories']} –∫–∫–∞–ª\n"
        f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ü–µ–ª—å –ø–æ –≤–æ–¥–µ: {user['extra_water']} –º–ª\n"
        f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ü–µ–ª—å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º: {user['extra_calories']} –∫–∫–∞–ª\n"
        f"–°–æ–∂–∂–µ–Ω–æ –∫–∞–ª–æ—Ä–∏–π: {user['burned_calories']} –∫–∫–∞–ª\n"
        f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {user['last_updated']}"
    )
    return profile_info